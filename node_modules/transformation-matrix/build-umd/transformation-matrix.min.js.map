{"version":3,"file":"transformation-matrix.min.js","mappings":"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","sources":["webpack://TransformationMatrix/webpack/universalModuleDefinition","webpack://TransformationMatrix/webpack/bootstrap","webpack://TransformationMatrix/webpack/runtime/define property getters","webpack://TransformationMatrix/webpack/runtime/hasOwnProperty shorthand","webpack://TransformationMatrix/webpack/runtime/make namespace object","webpack://TransformationMatrix/./src/applyToPoint.js","webpack://TransformationMatrix/./src/fromObject.js","webpack://TransformationMatrix/./src/fromString.js","webpack://TransformationMatrix/./src/identity.js","webpack://TransformationMatrix/./src/inverse.js","webpack://TransformationMatrix/./src/utils.js","webpack://TransformationMatrix/./src/isAffineMatrix.js","webpack://TransformationMatrix/./src/translate.js","webpack://TransformationMatrix/./src/transform.js","webpack://TransformationMatrix/./src/rotate.js","webpack://TransformationMatrix/./src/scale.js","webpack://TransformationMatrix/./src/shear.js","webpack://TransformationMatrix/./src/skew.js","webpack://TransformationMatrix/./src/toString.js","webpack://TransformationMatrix/./src/smoothMatrix.js","webpack://TransformationMatrix/./src/fromTriangles.js","webpack://TransformationMatrix/./src/fromDefinition.js","webpack://TransformationMatrix/./src/fromTransformAttribute.autogenerated.js","webpack://TransformationMatrix/./src/fromTransformAttribute.js","webpack://TransformationMatrix/./src/decompose.js","webpack://TransformationMatrix/./src/flip.js","webpack://TransformationMatrix/./src/fromMovingPoints.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TransformationMatrix\"] = factory();\n\telse\n\t\troot[\"TransformationMatrix\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Calculate a point transformed with an affine matrix\n * @param matrix {Matrix} Affine Matrix\n * @param  point {Point} Point\n * @returns {Point} Point\n */\nexport function applyToPoint (matrix, point) {\n  return Array.isArray(point)\n    ? [\n        matrix.a * point[0] + matrix.c * point[1] + matrix.e,\n        matrix.b * point[0] + matrix.d * point[1] + matrix.f\n      ]\n    : {\n        x: matrix.a * point.x + matrix.c * point.y + matrix.e,\n        y: matrix.b * point.x + matrix.d * point.y + matrix.f\n      }\n}\n\n/**\n * Calculate an array of points transformed with an affine matrix\n * @param matrix {Matrix} Affine Matrix\n * @param points {Point[]} Array of point\n * @returns {Point[]} Array of point\n */\nexport function applyToPoints (matrix, points) {\n  return points.map(point => applyToPoint(matrix, point))\n}\n","/**\n * Extract an affine matrix from an object that contains a,b,c,d,e,f keys\n * Any value could be a float or a string that contains a float\n * @param object {Object} Object that contains a,b,c,d,e,f keys\n * @return {Matrix} Affine Matrix\n */\nexport function fromObject (object) {\n  return {\n    a: parseFloat(object.a),\n    b: parseFloat(object.b),\n    c: parseFloat(object.c),\n    d: parseFloat(object.d),\n    e: parseFloat(object.e),\n    f: parseFloat(object.f)\n  }\n}\n","/**\n * @ignore\n * @type {RegExp}\n */\nconst matrixRegex = /^matrix\\(\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*\\)$/i\n\n/**\n * Parse a string formatted as matrix(a,b,c,d,e,f)\n * @param string {string} String with an affine matrix\n * @returns {Matrix} Affine Matrix\n *\n * @example\n * > fromString('matrix(1,2,3,4,5,6)')\n * {a: 1, b: 2, c: 3, d: 4, c: 5, e: 6}\n */\nexport function fromString (string) {\n  const parsed = string.match(matrixRegex)\n  if (parsed === null || parsed.length < 7) throw new Error(`'${string}' is not a matrix`)\n  return {\n    a: parseFloat(parsed[1]),\n    b: parseFloat(parsed[2]),\n    c: parseFloat(parsed[3]),\n    d: parseFloat(parsed[4]),\n    e: parseFloat(parsed[5]),\n    f: parseFloat(parsed[6])\n  }\n}\n","/**\n * Identity matrix\n * @returns {Matrix} Affine Matrix\n */\nexport function identity () {\n  return {\n    a: 1,\n    c: 0,\n    e: 0,\n    b: 0,\n    d: 1,\n    f: 0\n  }\n}\n","/**\n * Calculate a matrix that is the inverse of the provided matrix\n * @param matrix {Matrix} Affine Matrix\n * @returns {Matrix} Inverted Affine Matrix\n */\nexport function inverse (matrix) {\n  // http://www.wolframalpha.com/input/?i=Inverse+%5B%7B%7Ba,c,e%7D,%7Bb,d,f%7D,%7B0,0,1%7D%7D%5D\n\n  const { a, b, c, d, e, f } = matrix\n\n  const denom = a * d - b * c\n\n  return {\n    a: d / denom,\n    b: b / -denom,\n    c: c / -denom,\n    d: a / denom,\n    e: (d * e - c * f) / -denom,\n    f: (b * e - a * f) / denom\n  }\n}\n","export function isUndefined (val) {\n  return typeof val === 'undefined'\n}\n\nexport function isNumeric (n) {\n  return typeof n === 'number' &&\n    !Number.isNaN(n) &&\n    Number.isFinite(n)\n}\n\nexport function isObject (obj) {\n  return typeof obj === 'object' &&\n    obj !== null &&\n    !Array.isArray(obj)\n}\n\nexport function matchesShape (obj, keys) {\n  return keys.every(key => key in obj)\n}\n","import { isNumeric, isObject } from './utils'\n\n/**\n * Check if the object contain an affine matrix\n * @param object {Object} Generic Plain Object\n * @return {boolean} True if is an object and contains an affine matrix\n */\n\nexport function isAffineMatrix (object) {\n  return isObject(object) &&\n    'a' in object &&\n    isNumeric(object.a) &&\n    'b' in object &&\n    isNumeric(object.b) &&\n    'c' in object &&\n    isNumeric(object.c) &&\n    'd' in object &&\n    isNumeric(object.d) &&\n    'e' in object &&\n    isNumeric(object.e) &&\n    'f' in object &&\n    isNumeric(object.f)\n}\n","/**\n * Calculate a translate matrix\n * @param tx {number} Translation on axis x\n * @param [ty = 0] {number} Translation on axis y\n * @returns {Matrix} Affine Matrix\n */\nexport function translate (tx, ty = 0) {\n  return {\n    a: 1,\n    c: 0,\n    e: tx,\n    b: 0,\n    d: 1,\n    f: ty\n  }\n}\n","/**\n * Merge multiple matrices into one\n * @param matrices {...Matrix | Matrix[]} Matrices listed as separate parameters or in an array\n * @returns {Matrix} Affine Matrix\n */\nexport function transform (...matrices) {\n  matrices = Array.isArray(matrices[0]) ? matrices[0] : matrices\n\n  const multiply = (m1, m2) => {\n    return {\n      a: m1.a * m2.a + m1.c * m2.b,\n      c: m1.a * m2.c + m1.c * m2.d,\n      e: m1.a * m2.e + m1.c * m2.f + m1.e,\n      b: m1.b * m2.a + m1.d * m2.b,\n      d: m1.b * m2.c + m1.d * m2.d,\n      f: m1.b * m2.e + m1.d * m2.f + m1.f\n    }\n  }\n\n  switch (matrices.length) {\n    case 0:\n      throw new Error('no matrices provided')\n\n    case 1:\n      return matrices[0]\n\n    case 2:\n      return multiply(matrices[0], matrices[1])\n\n    default: {\n      const [m1, m2, ...rest] = matrices\n      const m = multiply(m1, m2)\n      return transform(m, ...rest)\n    }\n  }\n}\n\n/**\n * Merge multiple matrices into one\n * @param matrices {...Matrix | Matrix[]} Matrices listed as separate parameters or in an array\n * @returns {Matrix} Affine Matrix\n */\nexport function compose (...matrices) {\n  return transform(...matrices)\n}\n","import { isUndefined } from './utils'\nimport { translate } from './translate'\nimport { transform } from './transform'\n\nconst { cos, sin, PI } = Math\n/**\n * Calculate a rotation matrix\n * @param angle {number} Angle in radians\n * @param [cx] {number} If (cx,cy) are supplied the rotate is about this point\n * @param [cy] {number} If (cx,cy) are supplied the rotate is about this point\n * @returns {Matrix} Affine Matrix\n */\nexport function rotate (angle, cx, cy) {\n  const cosAngle = cos(angle)\n  const sinAngle = sin(angle)\n  const rotationMatrix = {\n    a: cosAngle,\n    c: -sinAngle,\n    e: 0,\n    b: sinAngle,\n    d: cosAngle,\n    f: 0\n  }\n  if (isUndefined(cx) || isUndefined(cy)) {\n    return rotationMatrix\n  }\n\n  return transform([\n    translate(cx, cy),\n    rotationMatrix,\n    translate(-cx, -cy)\n  ])\n}\n\n/**\n * Calculate a rotation matrix with a DEG angle\n * @param angle {number} Angle in degree\n * @param [cx] {number} If (cx,cy) are supplied the rotate is about this point\n * @param [cy] {number} If (cx,cy) are supplied the rotate is about this point\n * @returns {Matrix} Affine Matrix\n */\nexport function rotateDEG (angle, cx = undefined, cy = undefined) {\n  return rotate(angle * PI / 180, cx, cy)\n}\n","import { isUndefined } from './utils'\nimport { translate } from './translate'\nimport { transform } from './transform'\n\n/**\n * Calculate a scaling matrix\n * @param sx {number} Scaling on axis x\n * @param [sy = sx] {number} Scaling on axis y (default sx)\n * @param [cx] {number} If (cx,cy) are supplied the scaling is about this point\n * @param [cy] {number} If (cx,cy) are supplied the scaling is about this point\n * @returns {Matrix} Affine Matrix\n */\nexport function scale (sx, sy = undefined, cx = undefined, cy = undefined) {\n  if (isUndefined(sy)) sy = sx\n\n  const scaleMatrix = {\n    a: sx,\n    c: 0,\n    e: 0,\n    b: 0,\n    d: sy,\n    f: 0\n  }\n\n  if (isUndefined(cx) || isUndefined(cy)) {\n    return scaleMatrix\n  }\n\n  return transform([\n    translate(cx, cy),\n    scaleMatrix,\n    translate(-cx, -cy)\n  ])\n}\n","/**\n * Calculate a shear matrix\n * @param shx {number} Shear on axis x\n * @param shy {number} Shear on axis y\n * @returns {Matrix} Affine Matrix\n */\nexport function shear (shx, shy) {\n  return {\n    a: 1,\n    c: shx,\n    e: 0,\n    b: shy,\n    d: 1,\n    f: 0\n  }\n}\n","// https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/skew\nconst { tan } = Math\n\n/**\n * Calculate a skew matrix\n * @param ax {number} Skew on axis x\n * @param ay {number} Skew on axis y\n * @returns {Matrix} Affine Matrix\n */\nexport function skew (ax, ay) {\n  return {\n    a: 1,\n    c: tan(ax),\n    e: 0,\n    b: tan(ay),\n    d: 1,\n    f: 0\n  }\n}\n\n/**\n * Calculate a skew matrix using DEG angles\n * @param ax {number} Skew on axis x\n * @param ay {number} Skew on axis y\n * @returns {Matrix} Affine Matrix\n */\nexport function skewDEG (ax, ay) {\n  return skew(ax * Math.PI / 180, ay * Math.PI / 180)\n}\n","/**\n * Serialize an affine matrix to a string that can be used with CSS or SVG\n * @param matrix {Matrix} Affine Matrix\n * @returns {string} String that contains an affine matrix formatted as matrix(a,b,c,d,e,f)\n */\nexport function toCSS (matrix) {\n  return toString(matrix)\n}\n\n/**\n * Serialize an affine matrix to a string that can be used with CSS or SVG\n * @param matrix {Matrix} Affine Matrix\n * @returns {string} String that contains an affine matrix formatted as matrix(a,b,c,d,e,f)\n */\nexport function toSVG (matrix) {\n  return toString(matrix)\n}\n\n/**\n * Serialize an affine matrix to a string that can be used with CSS or SVG\n * @param matrix {Matrix} Affine Matrix\n * @returns {string} String that contains an affine matrix formatted as matrix(a,b,c,d,e,f)\n */\nexport function toString (matrix) {\n  return `matrix(${matrix.a},${matrix.b},${matrix.c},${matrix.d},${matrix.e},${matrix.f})`\n}\n","/**\n * Rounds all elements of the given matrix using the given precision\n * @param matrix {Matrix} An affine matrix to round\n * @param [precision] {number} A precision to use for Math.round. Defaults to 10000000000 (meaning which rounds to the 10th digit after the comma).\n * @returns {Matrix} The rounded Affine Matrix\n */\nexport function smoothMatrix (matrix, precision = 10000000000) {\n  return {\n    a: Math.round(matrix.a * precision) / precision,\n    b: Math.round(matrix.b * precision) / precision,\n    c: Math.round(matrix.c * precision) / precision,\n    d: Math.round(matrix.d * precision) / precision,\n    e: Math.round(matrix.e * precision) / precision,\n    f: Math.round(matrix.f * precision) / precision\n  }\n}\n","import { inverse } from './inverse'\nimport { transform } from './transform'\nimport { smoothMatrix } from './smoothMatrix'\n\n/**\n * Returns a matrix that transforms a triangle t1 into another triangle t2, or throws an exception if it is impossible.\n * @param t1 {Point[]} Array of points containing the three points for the first triangle\n * @param t2 {Point[]} Array of points containing the three points for the second triangle\n * @returns {Matrix} Matrix which transforms t1 to t2\n * @throws Exception if the matrix becomes not invertible\n */\nexport function fromTriangles (t1, t2) {\n  // point p = first point of the triangle\n  const px1 = t1[0].x != null ? t1[0].x : t1[0][0]\n  const py1 = t1[0].y != null ? t1[0].y : t1[0][1]\n  const px2 = t2[0].x != null ? t2[0].x : t2[0][0]\n  const py2 = t2[0].y != null ? t2[0].y : t2[0][1]\n\n  // point q = second point of the triangle\n  const qx1 = t1[1].x != null ? t1[1].x : t1[1][0]\n  const qy1 = t1[1].y != null ? t1[1].y : t1[1][1]\n  const qx2 = t2[1].x != null ? t2[1].x : t2[1][0]\n  const qy2 = t2[1].y != null ? t2[1].y : t2[1][1]\n\n  // point r = third point of the triangle\n  const rx1 = t1[2].x != null ? t1[2].x : t1[2][0]\n  const ry1 = t1[2].y != null ? t1[2].y : t1[2][1]\n  const rx2 = t2[2].x != null ? t2[2].x : t2[2][0]\n  const ry2 = t2[2].y != null ? t2[2].y : t2[2][1]\n\n  const r1 = {\n    a: px1 - rx1,\n    b: py1 - ry1,\n    c: qx1 - rx1,\n    d: qy1 - ry1,\n    e: rx1,\n    f: ry1\n  }\n  const r2 = {\n    a: px2 - rx2,\n    b: py2 - ry2,\n    c: qx2 - rx2,\n    d: qy2 - ry2,\n    e: rx2,\n    f: ry2\n  }\n\n  const inverseR1 = inverse(r1)\n  const affineMatrix = transform([r2, inverseR1])\n\n  // round the matrix elements to smooth the finite inversion\n  return smoothMatrix(affineMatrix)\n}\n","import { fromObject } from './fromObject'\nimport { translate } from './translate'\nimport { scale } from './scale'\nimport { rotateDEG } from './rotate'\nimport { skewDEG } from './skew'\nimport { shear } from './shear'\n\n/**\n * Converts array of matrix descriptor to array of matrix\n * @param definitionOrArrayOfDefinition {Object[]} Array of object describing the matrix\n * @returns {Matrix[]} Array of matrix\n *\n * @example\n * > fromDefinition([\n *  { type: 'matrix', a:1, b:2, c:3, d:4, e:5, f:6 },\n *  { type: 'translate', tx: 10, ty: 20 },\n *  { type: 'scale', sx: 2, sy: 4 },\n *  { type: 'rotate', angle: 90, cx: 50, cy: 25 },\n *  { type: 'skewX', angle: 45 },\n *  { type: 'skewY',  angle: 45 },\n *  { type: 'shear', shx: 10, shy: 20}\n * ])\n *\n * [\n *  { a: 1, b: 2, c: 3, d: 4, e: 5, f: 6 },\n *  { a: 1, c: 0, e: 10, b: 0, d: 1, f: 20 },\n *  { a: 2, c: 0, e: 0, b: 0, d: 4, f: 0 },\n *  { a: 6.123, c: -1, e: 0, b: 1, d: 6.123, f: 0 },\n *  { a: 1, c: 0.99.., e: 0, b: 0, d: 1, f: 0 },\n *  { a: 1, c: 0, e: 0, b: 0.99, d: 1, f: 0 },\n *  { a: 1, c: 10, e: 0, b: 20, d: 1, f: 0 }\n * ]\n **/\nexport function fromDefinition (definitionOrArrayOfDefinition) {\n  return Array.isArray(definitionOrArrayOfDefinition)\n    ? definitionOrArrayOfDefinition.map(mapper)\n    : mapper(definitionOrArrayOfDefinition)\n\n  function mapper (descriptor) {\n    switch (descriptor.type) {\n      case 'matrix':\n        if ('a' in descriptor &&\n          'b' in descriptor &&\n          'c' in descriptor &&\n          'd' in descriptor &&\n          'e' in descriptor &&\n          'f' in descriptor\n        ) {\n          return fromObject(descriptor)\n        } else {\n          throw new Error('MISSING_MANDATORY_PARAM')\n        }\n\n      case 'translate':\n        if (!('tx' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n\n        if ('ty' in descriptor) return translate(descriptor.tx, descriptor.ty)\n\n        return translate(descriptor.tx)\n\n      case 'scale':\n        if (!('sx' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n\n        if ('sy' in descriptor) return scale(descriptor.sx, descriptor.sy)\n\n        return scale(descriptor.sx)\n\n      case 'rotate':\n        if (!('angle' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n\n        if ('cx' in descriptor && 'cy' in descriptor) {\n          return rotateDEG(descriptor.angle, descriptor.cx, descriptor.cy)\n        }\n        return rotateDEG(descriptor.angle)\n\n      case 'skewX':\n        if (!('angle' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n        return skewDEG(descriptor.angle, 0)\n\n      case 'skewY':\n        if (!('angle' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n        return skewDEG(0, descriptor.angle)\n\n      case 'shear':\n        if (!('shx' in descriptor && 'shy' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n        return shear(descriptor.shx, descriptor.shy)\n\n      default:\n        throw new Error('UNSUPPORTED_DESCRIPTOR')\n    }\n  }\n}\n","// Generated by Peggy 3.0.0.\n//\n// https://peggyjs.org/\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  var self = Error.call(this, message);\n  // istanbul ignore next Check is a necessary evil to support older environments\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n  }\n  self.expected = expected;\n  self.found = found;\n  self.location = location;\n  self.name = \"SyntaxError\";\n  return self;\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\nfunction peg$padEnd(str, targetLength, padString) {\n  padString = padString || \" \";\n  if (str.length > targetLength) { return str; }\n  targetLength -= str.length;\n  padString += padString.repeat(targetLength);\n  return str + padString.slice(0, targetLength);\n}\n\npeg$SyntaxError.prototype.format = function(sources) {\n  var str = \"Error: \" + this.message;\n  if (this.location) {\n    var src = null;\n    var k;\n    for (k = 0; k < sources.length; k++) {\n      if (sources[k].source === this.location.source) {\n        src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n        break;\n      }\n    }\n    var s = this.location.start;\n    var offset_s = (this.location.source && (typeof this.location.source.offset === \"function\"))\n      ? this.location.source.offset(s)\n      : s;\n    var loc = this.location.source + \":\" + offset_s.line + \":\" + offset_s.column;\n    if (src) {\n      var e = this.location.end;\n      var filler = peg$padEnd(\"\", offset_s.line.toString().length, ' ');\n      var line = src[s.line - 1];\n      var last = s.line === e.line ? e.column : line.length + 1;\n      var hatLen = (last - s.column) || 1;\n      str += \"\\n --> \" + loc + \"\\n\"\n          + filler + \" |\\n\"\n          + offset_s.line + \" | \" + line + \"\\n\"\n          + filler + \" | \" + peg$padEnd(\"\", s.column - 1, ' ')\n          + peg$padEnd(\"\", hatLen, \"^\");\n    } else {\n      str += \"\\n at \" + loc;\n    }\n  }\n  return str;\n};\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts.join(\"\") + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n  var peg$source = options.grammarSource;\n\n  var peg$startRuleFunctions = { transformList: peg$parsetransformList };\n  var peg$startRuleFunction = peg$parsetransformList;\n\n  var peg$c0 = \"matrix\";\n  var peg$c1 = \"(\";\n  var peg$c2 = \")\";\n  var peg$c3 = \"translate\";\n  var peg$c4 = \"scale\";\n  var peg$c5 = \"rotate\";\n  var peg$c6 = \"skewX\";\n  var peg$c7 = \"skewY\";\n  var peg$c8 = \",\";\n  var peg$c9 = \".\";\n\n  var peg$r0 = /^[eE]/;\n  var peg$r1 = /^[+\\-]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[ \\t\\r\\n]/;\n\n  var peg$e0 = peg$literalExpectation(\"matrix\", false);\n  var peg$e1 = peg$literalExpectation(\"(\", false);\n  var peg$e2 = peg$literalExpectation(\")\", false);\n  var peg$e3 = peg$literalExpectation(\"translate\", false);\n  var peg$e4 = peg$literalExpectation(\"scale\", false);\n  var peg$e5 = peg$literalExpectation(\"rotate\", false);\n  var peg$e6 = peg$literalExpectation(\"skewX\", false);\n  var peg$e7 = peg$literalExpectation(\"skewY\", false);\n  var peg$e8 = peg$literalExpectation(\",\", false);\n  var peg$e9 = peg$otherExpectation(\"fractionalConstant\");\n  var peg$e10 = peg$literalExpectation(\".\", false);\n  var peg$e11 = peg$classExpectation([\"e\", \"E\"], false, false);\n  var peg$e12 = peg$classExpectation([\"+\", \"-\"], false, false);\n  var peg$e13 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e14 = peg$classExpectation([\" \", \"\\t\", \"\\r\", \"\\n\"], false, false);\n\n  var peg$f0 = function(ts) { return ts; };\n  var peg$f1 = function(t, ts) { return t.concat(ts) };\n  var peg$f2 = function(a, b, c, d, e, f) {\n      return [{type: 'matrix', a: a, b: b, c: c, d: d, e: e, f: f}];\n    };\n  var peg$f3 = function(tx, ty) {\n      var t = {type: 'translate', tx: tx};\n      if (ty) t.ty = ty;\n      return [t];\n    };\n  var peg$f4 = function(sx, sy) {\n      var s = {type:'scale', sx: sx};\n      if (sy) s.sy = sy;\n      return [s];\n    };\n  var peg$f5 = function(angle, c) {\n      var r = {type:'rotate', angle: angle};\n      if (c) {\n        r.cx = c[0];\n        r.cy = c[1];\n      }\n      return [r];\n    };\n  var peg$f6 = function(angle) {\n      return [{type: 'skewX', angle: angle}];\n    };\n  var peg$f7 = function(angle) {\n      return [{type: 'skewY', angle: angle}];\n    };\n  var peg$f8 = function(f) { return parseFloat(f.join(\"\")); };\n  var peg$f9 = function(i) { return parseInt(i.join(\"\")); };\n  var peg$f10 = function(n) { return n; };\n  var peg$f11 = function(n1, n2) { return [n1, n2]; };\n  var peg$f12 = function(ds) { return ds.join(\"\"); };\n  var peg$f13 = function(f, e) { return [f, e || null].join(\"\")};\n  var peg$f14 = function(d, e) { return [d, e].join(\"\")};\n  var peg$f15 = function(d1, d2) { return [d1 ? d1.join(\"\") : null, \".\", d2.join(\"\")].join(\"\"); };\n  var peg$f16 = function(d) { return d.join(\"\"); };\n  var peg$f17 = function(s, d) { return ['e', s, d.join(\"\")].join(\"\") };\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$maxFailPos = 0;\n  var peg$maxFailExpected = [];\n  var peg$silentFails = 0;\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return {\n      source: peg$source,\n      start: peg$savedPos,\n      end: peg$currPos\n    };\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos, offset) {\n    var startPosDetails = peg$computePosDetails(startPos);\n    var endPosDetails = peg$computePosDetails(endPos);\n\n    var res = {\n      source: peg$source,\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n    if (offset && peg$source && (typeof peg$source.offset === \"function\")) {\n      res.start = peg$source.offset(res.start);\n      res.end = peg$source.offset(res.end);\n    }\n    return res;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsetransformList() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsewsp();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parsewsp();\n    }\n    s2 = peg$parsetransforms();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = [];\n    s4 = peg$parsewsp();\n    while (s4 !== peg$FAILED) {\n      s3.push(s4);\n      s4 = peg$parsewsp();\n    }\n    peg$savedPos = s0;\n    s0 = peg$f0(s2);\n\n    return s0;\n  }\n\n  function peg$parsetransforms() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsetransform();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsecommaWsp();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsecommaWsp();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsetransforms();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f1(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsetransform();\n    }\n\n    return s0;\n  }\n\n  function peg$parsetransform() {\n    var s0;\n\n    s0 = peg$parsematrix();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsetranslate();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsescale();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parserotate();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseskewX();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseskewY();\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsematrix() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c0) {\n      s1 = peg$c0;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e0); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWsp();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsenumber();\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parsecommaWsp();\n              if (s8 !== peg$FAILED) {\n                s9 = peg$parsenumber();\n                if (s9 !== peg$FAILED) {\n                  s10 = peg$parsecommaWsp();\n                  if (s10 !== peg$FAILED) {\n                    s11 = peg$parsenumber();\n                    if (s11 !== peg$FAILED) {\n                      s12 = peg$parsecommaWsp();\n                      if (s12 !== peg$FAILED) {\n                        s13 = peg$parsenumber();\n                        if (s13 !== peg$FAILED) {\n                          s14 = peg$parsecommaWsp();\n                          if (s14 !== peg$FAILED) {\n                            s15 = peg$parsenumber();\n                            if (s15 !== peg$FAILED) {\n                              s16 = [];\n                              s17 = peg$parsewsp();\n                              while (s17 !== peg$FAILED) {\n                                s16.push(s17);\n                                s17 = peg$parsewsp();\n                              }\n                              if (input.charCodeAt(peg$currPos) === 41) {\n                                s17 = peg$c2;\n                                peg$currPos++;\n                              } else {\n                                s17 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$e2); }\n                              }\n                              if (s17 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s0 = peg$f2(s5, s7, s9, s11, s13, s15);\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetranslate() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 9) === peg$c3) {\n      s1 = peg$c3;\n      peg$currPos += 9;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e3); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWspNumber();\n          if (s6 === peg$FAILED) {\n            s6 = null;\n          }\n          s7 = [];\n          s8 = peg$parsewsp();\n          while (s8 !== peg$FAILED) {\n            s7.push(s8);\n            s8 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s8 = peg$c2;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\n          }\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f3(s5, s6);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsescale() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c4) {\n      s1 = peg$c4;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e4); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWspNumber();\n          if (s6 === peg$FAILED) {\n            s6 = null;\n          }\n          s7 = [];\n          s8 = peg$parsewsp();\n          while (s8 !== peg$FAILED) {\n            s7.push(s8);\n            s8 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s8 = peg$c2;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\n          }\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f4(s5, s6);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parserotate() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c5) {\n      s1 = peg$c5;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e5); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWspTwoNumbers();\n          if (s6 === peg$FAILED) {\n            s6 = null;\n          }\n          s7 = [];\n          s8 = peg$parsewsp();\n          while (s8 !== peg$FAILED) {\n            s7.push(s8);\n            s8 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s8 = peg$c2;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\n          }\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f5(s5, s6);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseskewX() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c6) {\n      s1 = peg$c6;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$parsewsp();\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c2;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\n          }\n          if (s7 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f6(s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseskewY() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c7) {\n      s1 = peg$c7;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e7); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$parsewsp();\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c2;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\n          }\n          if (s7 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f7(s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumber() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsesign();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = peg$parsefloatingPointConstant();\n    if (s3 !== peg$FAILED) {\n      s2 = [s2, s3];\n      s1 = s2;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f8(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parsesign();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseintegerConstant();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f9(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecommaWspNumber() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parsecommaWsp();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f10(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecommaWspTwoNumbers() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsecommaWsp();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsecommaWsp();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsenumber();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f11(s2, s4);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecommaWsp() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsewsp();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsewsp();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomma();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = [];\n      s4 = peg$parsewsp();\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$parsewsp();\n      }\n      s1 = [s1, s2, s3];\n      s0 = s1;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsecomma();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsewsp();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsewsp();\n        }\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomma() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s0 = peg$c8;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e8); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseintegerConstant() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsedigitSequence();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f12(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsefloatingPointConstant() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parsefractionalConstant();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseexponent();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f13(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsedigitSequence();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseexponent();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f14(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefractionalConstant() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsedigitSequence();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s2 = peg$c9;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e10); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsedigitSequence();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f15(s1, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsedigitSequence();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s2 = peg$c9;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e10); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f16(s1);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e9); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseexponent() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e11); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesign();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parsedigitSequence();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f17(s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesign() {\n    var s0;\n\n    if (peg$r1.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e12); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedigitSequence() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parsedigit();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parsedigit();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedigit() {\n    var s0;\n\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e13); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsewsp() {\n    var s0;\n\n    if (peg$r3.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e14); }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nexport {\n  peg$SyntaxError as SyntaxError,\n\n  peg$parse as parse\n};\n","import { parse } from './fromTransformAttribute.autogenerated'\n\n/**\n * Parser for SVG Trasform Attribute http://www.w3.org/TR/SVG/coords.html#TransformAttribute <br/>\n * Warning: This should be considered BETA until it is released a stable version of pegjs.\n * @param transformString {string} Transform string as defined by w3 Consortium\n * @returns {MatrixDescriptor[]} Array of MatrixDescriptor\n *\n * @example\n * > fromTransformAttribute('translate(-10,-10) scale(2,2) translate(10,10)')\n * [\n *  { type: 'translate', tx: -10, ty: -10},\n *  { type: 'scale', sx: 2, sy: 2 },\n *  { type: 'translate', tx: 10, ty: 10}\n * ]\n *\n * > compose(fromDefinition(fromTransformAttribute('translate(-10, -10) scale(10, 10)')))\n * { a: 10, c: 0, e: -10, b: 0, d: 10, f: -10 }\n */\nexport function fromTransformAttribute (transformString) {\n  return parse(transformString)\n}\n","import { scale } from './scale'\nimport { compose } from './transform'\n/**\n * Decompose a matrix into translation, scaling and rotation components, optionally\n * take horizontal and vertical flip in to consideration.\n * Note this function decomposes a matrix in rotation -> scaling -> translation order. I.e. for\n * certain translation T {tx, ty}, rotation R and scaling S { sx, sy }, it's only true for:\n *  decomposeTSR(compose(T, S, R)) === { translate: T, rotation: R, scale: S }\n * composing in a different order may yield a different decomposition result.\n * @param matrix {Matrix} Affine Matrix\n * @param  flipX {boolean} Whether the matrix contains vertical flip, i.e. mirrors on x-axis\n * @param  flipY {boolean} Whether the matrix contains horizontal flip, i.e. mirrors on y-axis\n * @returns {Transform} A transform object consisted by its translation, scaling\n * and rotation components.\n */\nexport function decomposeTSR (matrix, flipX = false, flipY = false) {\n  // Remove flip from the matrix first - flip could be incorrectly interpreted as\n  // rotations (e.g. flipX + flipY = rotate by 180 degrees).\n  // Note flipX is a vertical flip, and flipY is a horizontal flip.\n  if (flipX) {\n    if (flipY) {\n      matrix = compose(matrix, scale(-1, -1))\n    } else {\n      matrix = compose(matrix, scale(1, -1))\n    }\n  } else if (flipY) {\n    matrix = compose(matrix, scale(-1, 1))\n  }\n\n  const a = matrix.a; const b = matrix.b\n  const c = matrix.c; const d = matrix.d\n  let scaleX, scaleY, rotation\n\n  if (a !== 0 || c !== 0) {\n    const hypotAc = Math.hypot(a, c)\n    scaleX = hypotAc\n    scaleY = (a * d - b * c) / hypotAc\n    const acos = Math.acos(a / hypotAc)\n    rotation = c > 0 ? -acos : acos\n  } else if (b !== 0 || d !== 0) {\n    const hypotBd = Math.hypot(b, d)\n    scaleX = (a * d - b * c) / hypotBd\n    scaleY = hypotBd\n    const acos = Math.acos(b / hypotBd)\n    rotation = Math.PI / 2 + (d > 0 ? -acos : acos)\n  } else {\n    scaleX = 0\n    scaleY = 0\n    rotation = 0\n  }\n\n  // put the flip factors back\n  if (flipY) {\n    scaleX = -scaleX\n  }\n\n  if (flipX) {\n    scaleY = -scaleY\n  }\n\n  return {\n    translate: { tx: matrix.e, ty: matrix.f },\n    scale: { sx: scaleX, sy: scaleY },\n    rotation: { angle: rotation }\n  }\n}\n","\n/**\n * Tranformation matrix that mirrors on x-axis\n * @returns {Matrix} Affine Matrix\n */\nexport function flipX () {\n  return {\n    a: 1,\n    c: 0,\n    e: 0,\n    b: 0,\n    d: -1,\n    f: 0\n  }\n}\n\n/**\n * Tranformation matrix that mirrors on y-axis\n * @returns {Matrix} Affine Matrix\n */\nexport function flipY () {\n  return {\n    a: -1,\n    c: 0,\n    e: 0,\n    b: 0,\n    d: 1,\n    f: 0\n  }\n}\n\n/**\n * Tranformation matrix that mirrors on origin\n * @returns {Matrix} Affine Matrix\n */\nexport function flipOrigin () {\n  return {\n    a: -1,\n    c: 0,\n    e: 0,\n    b: 0,\n    d: -1,\n    f: 0\n  }\n}\n","import { translate } from './translate'\nimport { applyToPoint } from './applyToPoint'\nimport { rotate } from './rotate'\nimport { scale } from './scale'\nimport { compose } from './transform'\n\n// https://manivannan-ai.medium.com/find-the-angle-between-three-points-from-2d-using-python-348c513e2cd\n\n/**\n * Calculate a transformation matrix from a point that starts from A to A'\n * This approach can be associated to a pointer that moves on a device\n * @param {Point} startingPoint - Starting point (A)\n * @param {Point} endingPoint - Ending point (A')\n */\nexport function fromOneMovingPoint (startingPoint, endingPoint) {\n  const tx = endingPoint.x - startingPoint.x\n  const ty = endingPoint.y - startingPoint.y\n\n  return translate(tx, ty)\n}\n\n/**\n * Calculate a transformation matrix about two points that move from positions A and B to A' and B'\n * This approach can be associated to a two finger gesture on a touch device\n * @param {Point} startingPoint1 - Starting Point (A)\n * @param {Point} startingPoint2 - Starting Point (B)\n * @param {Point} endingPoint1 - Ending point (A')\n * @param {Point} endingPoint2 - Ending Point (B')\n */\nexport function fromTwoMovingPoints (startingPoint1, startingPoint2, endingPoint1, endingPoint2) {\n  // finds translation\n  const translationMatrix = fromOneMovingPoint(startingPoint1, endingPoint1)\n\n  const pointA = applyToPoint(translationMatrix, startingPoint2) // I have to translate this point\n  const center = endingPoint1\n  const pointB = endingPoint2\n\n  // finds rotation matrix\n  const angle = Math.atan2(pointB.y - center.y, pointB.x - center.x) - Math.atan2(pointA.y - center.y, pointA.x - center.x)\n  const rotationMatrix = rotate(angle, center.x, center.y)\n\n  // finds scale matrix\n  const d1 = Math.sqrt(Math.pow(pointA.x - center.x, 2) + Math.pow(pointA.y - center.y, 2))\n  const d2 = Math.sqrt(Math.pow(pointB.x - center.x, 2) + Math.pow(pointB.y - center.y, 2))\n  const scalingLevel = d2 / d1\n  const scalingMatrix = scale(scalingLevel, scalingLevel, center.x, center.y)\n\n  return compose([\n    translationMatrix,\n    scalingMatrix,\n    rotationMatrix\n  ])\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","applyToPoint","matrix","point","Array","isArray","a","c","e","b","d","f","x","y","applyToPoints","points","map","fromObject","object","parseFloat","matrixRegex","fromString","string","parsed","match","length","Error","concat","identity","inverse","denom","isUndefined","val","isNumeric","n","Number","isNaN","isFinite","isAffineMatrix","_typeof","translate","tx","arguments","undefined","transform","_len","matrices","_key","multiply","m1","m2","_matrices2","rest","slice","m","apply","_toConsumableArray","compose","cos","Math","sin","PI","rotate","angle","cx","cy","cosAngle","sinAngle","rotationMatrix","rotateDEG","scale","sx","sy","scaleMatrix","shear","shx","shy","tan","skew","ax","ay","skewDEG","toCSS","toString","toSVG","smoothMatrix","precision","round","fromTriangles","t1","t2","px1","py1","px2","py2","qx1","qy1","qx2","qy2","rx1","ry1","rx2","ry2","fromDefinition","definitionOrArrayOfDefinition","mapper","descriptor","type","ty","peg$SyntaxError","message","expected","found","location","this","setPrototypeOf","name","peg$padEnd","str","targetLength","padString","repeat","peg$parse","input","options","peg$result","peg$FAILED","peg$source","grammarSource","peg$startRuleFunctions","transformList","peg$parsetransformList","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$r0","peg$r1","peg$r2","peg$r3","peg$e0","peg$literalExpectation","peg$e1","peg$e2","peg$e3","peg$e4","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","description","peg$e10","peg$e11","peg$classExpectation","peg$e12","peg$e13","peg$e14","peg$f0","ts","peg$f1","t","peg$f2","peg$f3","peg$f4","s","peg$f5","r","peg$f6","peg$f7","peg$f8","join","peg$f9","i","parseInt","peg$f10","peg$f11","n1","n2","peg$f12","ds","peg$f13","peg$f14","peg$f15","d1","d2","peg$f16","peg$f17","peg$currPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","text","ignoreCase","parts","inverted","peg$computePosDetails","pos","p","details","charCodeAt","peg$computeLocation","startPos","endPos","offset","startPosDetails","endPosDetails","res","source","start","end","peg$fail","push","s1","s2","s3","s4","peg$parsewsp","peg$parsetransforms","s0","peg$parsetransform","peg$parsecommaWsp","s5","s7","s9","s11","s13","s15","s16","s17","substr","peg$parsenumber","peg$parsematrix","s6","s8","peg$parsecommaWspNumber","peg$parsetranslate","peg$parsescale","peg$parsecommaWspTwoNumbers","peg$parserotate","peg$parseskewX","peg$parseskewY","peg$parsesign","peg$parsedigitSequence","peg$parsefractionalConstant","peg$parseexponent","peg$parsefloatingPointConstant","peg$parseintegerConstant","peg$parsecomma","test","charAt","peg$parsedigit","buildMessage","fromTransformAttribute","transformString","parse","decomposeTSR","flipX","flipY","scaleX","scaleY","rotation","hypotAc","hypot","acos","hypotBd","flipOrigin","fromOneMovingPoint","startingPoint","endingPoint","fromTwoMovingPoints","startingPoint1","startingPoint2","endingPoint1","endingPoint2","translationMatrix","pointA","center","pointB","atan2","sqrt","pow","scalingLevel","child","parent","C","constructor","peg$subclass","format","sources","k","src","split","offset_s","loc","filler","hatLen","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","part","classEscape","any","other","hex","ch","toUpperCase","replace","describeExpectation","j","descriptions","sort","describeExpected","describeFound"],"sourceRoot":""}