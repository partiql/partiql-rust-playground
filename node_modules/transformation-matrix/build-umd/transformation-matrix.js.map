{"version":3,"file":"transformation-matrix.js","mappings":"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","sources":["webpack://TransformationMatrix/webpack/universalModuleDefinition","webpack://TransformationMatrix/webpack/bootstrap","webpack://TransformationMatrix/webpack/runtime/define property getters","webpack://TransformationMatrix/webpack/runtime/hasOwnProperty shorthand","webpack://TransformationMatrix/webpack/runtime/make namespace object","webpack://TransformationMatrix/./src/applyToPoint.js","webpack://TransformationMatrix/./src/fromObject.js","webpack://TransformationMatrix/./src/fromString.js","webpack://TransformationMatrix/./src/identity.js","webpack://TransformationMatrix/./src/inverse.js","webpack://TransformationMatrix/./src/utils.js","webpack://TransformationMatrix/./src/isAffineMatrix.js","webpack://TransformationMatrix/./src/translate.js","webpack://TransformationMatrix/./src/transform.js","webpack://TransformationMatrix/./src/rotate.js","webpack://TransformationMatrix/./src/scale.js","webpack://TransformationMatrix/./src/shear.js","webpack://TransformationMatrix/./src/skew.js","webpack://TransformationMatrix/./src/toString.js","webpack://TransformationMatrix/./src/smoothMatrix.js","webpack://TransformationMatrix/./src/fromTriangles.js","webpack://TransformationMatrix/./src/fromDefinition.js","webpack://TransformationMatrix/./src/fromTransformAttribute.autogenerated.js","webpack://TransformationMatrix/./src/fromTransformAttribute.js","webpack://TransformationMatrix/./src/decompose.js","webpack://TransformationMatrix/./src/flip.js","webpack://TransformationMatrix/./src/fromMovingPoints.js","webpack://TransformationMatrix/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TransformationMatrix\"] = factory();\n\telse\n\t\troot[\"TransformationMatrix\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Calculate a point transformed with an affine matrix\n * @param matrix {Matrix} Affine Matrix\n * @param  point {Point} Point\n * @returns {Point} Point\n */\nexport function applyToPoint (matrix, point) {\n  return Array.isArray(point)\n    ? [\n        matrix.a * point[0] + matrix.c * point[1] + matrix.e,\n        matrix.b * point[0] + matrix.d * point[1] + matrix.f\n      ]\n    : {\n        x: matrix.a * point.x + matrix.c * point.y + matrix.e,\n        y: matrix.b * point.x + matrix.d * point.y + matrix.f\n      }\n}\n\n/**\n * Calculate an array of points transformed with an affine matrix\n * @param matrix {Matrix} Affine Matrix\n * @param points {Point[]} Array of point\n * @returns {Point[]} Array of point\n */\nexport function applyToPoints (matrix, points) {\n  return points.map(point => applyToPoint(matrix, point))\n}\n","/**\n * Extract an affine matrix from an object that contains a,b,c,d,e,f keys\n * Any value could be a float or a string that contains a float\n * @param object {Object} Object that contains a,b,c,d,e,f keys\n * @return {Matrix} Affine Matrix\n */\nexport function fromObject (object) {\n  return {\n    a: parseFloat(object.a),\n    b: parseFloat(object.b),\n    c: parseFloat(object.c),\n    d: parseFloat(object.d),\n    e: parseFloat(object.e),\n    f: parseFloat(object.f)\n  }\n}\n","/**\n * @ignore\n * @type {RegExp}\n */\nconst matrixRegex = /^matrix\\(\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*\\)$/i\n\n/**\n * Parse a string formatted as matrix(a,b,c,d,e,f)\n * @param string {string} String with an affine matrix\n * @returns {Matrix} Affine Matrix\n *\n * @example\n * > fromString('matrix(1,2,3,4,5,6)')\n * {a: 1, b: 2, c: 3, d: 4, c: 5, e: 6}\n */\nexport function fromString (string) {\n  const parsed = string.match(matrixRegex)\n  if (parsed === null || parsed.length < 7) throw new Error(`'${string}' is not a matrix`)\n  return {\n    a: parseFloat(parsed[1]),\n    b: parseFloat(parsed[2]),\n    c: parseFloat(parsed[3]),\n    d: parseFloat(parsed[4]),\n    e: parseFloat(parsed[5]),\n    f: parseFloat(parsed[6])\n  }\n}\n","/**\n * Identity matrix\n * @returns {Matrix} Affine Matrix\n */\nexport function identity () {\n  return {\n    a: 1,\n    c: 0,\n    e: 0,\n    b: 0,\n    d: 1,\n    f: 0\n  }\n}\n","/**\n * Calculate a matrix that is the inverse of the provided matrix\n * @param matrix {Matrix} Affine Matrix\n * @returns {Matrix} Inverted Affine Matrix\n */\nexport function inverse (matrix) {\n  // http://www.wolframalpha.com/input/?i=Inverse+%5B%7B%7Ba,c,e%7D,%7Bb,d,f%7D,%7B0,0,1%7D%7D%5D\n\n  const { a, b, c, d, e, f } = matrix\n\n  const denom = a * d - b * c\n\n  return {\n    a: d / denom,\n    b: b / -denom,\n    c: c / -denom,\n    d: a / denom,\n    e: (d * e - c * f) / -denom,\n    f: (b * e - a * f) / denom\n  }\n}\n","export function isUndefined (val) {\n  return typeof val === 'undefined'\n}\n\nexport function isNumeric (n) {\n  return typeof n === 'number' &&\n    !Number.isNaN(n) &&\n    Number.isFinite(n)\n}\n\nexport function isObject (obj) {\n  return typeof obj === 'object' &&\n    obj !== null &&\n    !Array.isArray(obj)\n}\n\nexport function matchesShape (obj, keys) {\n  return keys.every(key => key in obj)\n}\n","import { isNumeric, isObject } from './utils'\n\n/**\n * Check if the object contain an affine matrix\n * @param object {Object} Generic Plain Object\n * @return {boolean} True if is an object and contains an affine matrix\n */\n\nexport function isAffineMatrix (object) {\n  return isObject(object) &&\n    'a' in object &&\n    isNumeric(object.a) &&\n    'b' in object &&\n    isNumeric(object.b) &&\n    'c' in object &&\n    isNumeric(object.c) &&\n    'd' in object &&\n    isNumeric(object.d) &&\n    'e' in object &&\n    isNumeric(object.e) &&\n    'f' in object &&\n    isNumeric(object.f)\n}\n","/**\n * Calculate a translate matrix\n * @param tx {number} Translation on axis x\n * @param [ty = 0] {number} Translation on axis y\n * @returns {Matrix} Affine Matrix\n */\nexport function translate (tx, ty = 0) {\n  return {\n    a: 1,\n    c: 0,\n    e: tx,\n    b: 0,\n    d: 1,\n    f: ty\n  }\n}\n","/**\n * Merge multiple matrices into one\n * @param matrices {...Matrix | Matrix[]} Matrices listed as separate parameters or in an array\n * @returns {Matrix} Affine Matrix\n */\nexport function transform (...matrices) {\n  matrices = Array.isArray(matrices[0]) ? matrices[0] : matrices\n\n  const multiply = (m1, m2) => {\n    return {\n      a: m1.a * m2.a + m1.c * m2.b,\n      c: m1.a * m2.c + m1.c * m2.d,\n      e: m1.a * m2.e + m1.c * m2.f + m1.e,\n      b: m1.b * m2.a + m1.d * m2.b,\n      d: m1.b * m2.c + m1.d * m2.d,\n      f: m1.b * m2.e + m1.d * m2.f + m1.f\n    }\n  }\n\n  switch (matrices.length) {\n    case 0:\n      throw new Error('no matrices provided')\n\n    case 1:\n      return matrices[0]\n\n    case 2:\n      return multiply(matrices[0], matrices[1])\n\n    default: {\n      const [m1, m2, ...rest] = matrices\n      const m = multiply(m1, m2)\n      return transform(m, ...rest)\n    }\n  }\n}\n\n/**\n * Merge multiple matrices into one\n * @param matrices {...Matrix | Matrix[]} Matrices listed as separate parameters or in an array\n * @returns {Matrix} Affine Matrix\n */\nexport function compose (...matrices) {\n  return transform(...matrices)\n}\n","import { isUndefined } from './utils'\nimport { translate } from './translate'\nimport { transform } from './transform'\n\nconst { cos, sin, PI } = Math\n/**\n * Calculate a rotation matrix\n * @param angle {number} Angle in radians\n * @param [cx] {number} If (cx,cy) are supplied the rotate is about this point\n * @param [cy] {number} If (cx,cy) are supplied the rotate is about this point\n * @returns {Matrix} Affine Matrix\n */\nexport function rotate (angle, cx, cy) {\n  const cosAngle = cos(angle)\n  const sinAngle = sin(angle)\n  const rotationMatrix = {\n    a: cosAngle,\n    c: -sinAngle,\n    e: 0,\n    b: sinAngle,\n    d: cosAngle,\n    f: 0\n  }\n  if (isUndefined(cx) || isUndefined(cy)) {\n    return rotationMatrix\n  }\n\n  return transform([\n    translate(cx, cy),\n    rotationMatrix,\n    translate(-cx, -cy)\n  ])\n}\n\n/**\n * Calculate a rotation matrix with a DEG angle\n * @param angle {number} Angle in degree\n * @param [cx] {number} If (cx,cy) are supplied the rotate is about this point\n * @param [cy] {number} If (cx,cy) are supplied the rotate is about this point\n * @returns {Matrix} Affine Matrix\n */\nexport function rotateDEG (angle, cx = undefined, cy = undefined) {\n  return rotate(angle * PI / 180, cx, cy)\n}\n","import { isUndefined } from './utils'\nimport { translate } from './translate'\nimport { transform } from './transform'\n\n/**\n * Calculate a scaling matrix\n * @param sx {number} Scaling on axis x\n * @param [sy = sx] {number} Scaling on axis y (default sx)\n * @param [cx] {number} If (cx,cy) are supplied the scaling is about this point\n * @param [cy] {number} If (cx,cy) are supplied the scaling is about this point\n * @returns {Matrix} Affine Matrix\n */\nexport function scale (sx, sy = undefined, cx = undefined, cy = undefined) {\n  if (isUndefined(sy)) sy = sx\n\n  const scaleMatrix = {\n    a: sx,\n    c: 0,\n    e: 0,\n    b: 0,\n    d: sy,\n    f: 0\n  }\n\n  if (isUndefined(cx) || isUndefined(cy)) {\n    return scaleMatrix\n  }\n\n  return transform([\n    translate(cx, cy),\n    scaleMatrix,\n    translate(-cx, -cy)\n  ])\n}\n","/**\n * Calculate a shear matrix\n * @param shx {number} Shear on axis x\n * @param shy {number} Shear on axis y\n * @returns {Matrix} Affine Matrix\n */\nexport function shear (shx, shy) {\n  return {\n    a: 1,\n    c: shx,\n    e: 0,\n    b: shy,\n    d: 1,\n    f: 0\n  }\n}\n","// https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/skew\nconst { tan } = Math\n\n/**\n * Calculate a skew matrix\n * @param ax {number} Skew on axis x\n * @param ay {number} Skew on axis y\n * @returns {Matrix} Affine Matrix\n */\nexport function skew (ax, ay) {\n  return {\n    a: 1,\n    c: tan(ax),\n    e: 0,\n    b: tan(ay),\n    d: 1,\n    f: 0\n  }\n}\n\n/**\n * Calculate a skew matrix using DEG angles\n * @param ax {number} Skew on axis x\n * @param ay {number} Skew on axis y\n * @returns {Matrix} Affine Matrix\n */\nexport function skewDEG (ax, ay) {\n  return skew(ax * Math.PI / 180, ay * Math.PI / 180)\n}\n","/**\n * Serialize an affine matrix to a string that can be used with CSS or SVG\n * @param matrix {Matrix} Affine Matrix\n * @returns {string} String that contains an affine matrix formatted as matrix(a,b,c,d,e,f)\n */\nexport function toCSS (matrix) {\n  return toString(matrix)\n}\n\n/**\n * Serialize an affine matrix to a string that can be used with CSS or SVG\n * @param matrix {Matrix} Affine Matrix\n * @returns {string} String that contains an affine matrix formatted as matrix(a,b,c,d,e,f)\n */\nexport function toSVG (matrix) {\n  return toString(matrix)\n}\n\n/**\n * Serialize an affine matrix to a string that can be used with CSS or SVG\n * @param matrix {Matrix} Affine Matrix\n * @returns {string} String that contains an affine matrix formatted as matrix(a,b,c,d,e,f)\n */\nexport function toString (matrix) {\n  return `matrix(${matrix.a},${matrix.b},${matrix.c},${matrix.d},${matrix.e},${matrix.f})`\n}\n","/**\n * Rounds all elements of the given matrix using the given precision\n * @param matrix {Matrix} An affine matrix to round\n * @param [precision] {number} A precision to use for Math.round. Defaults to 10000000000 (meaning which rounds to the 10th digit after the comma).\n * @returns {Matrix} The rounded Affine Matrix\n */\nexport function smoothMatrix (matrix, precision = 10000000000) {\n  return {\n    a: Math.round(matrix.a * precision) / precision,\n    b: Math.round(matrix.b * precision) / precision,\n    c: Math.round(matrix.c * precision) / precision,\n    d: Math.round(matrix.d * precision) / precision,\n    e: Math.round(matrix.e * precision) / precision,\n    f: Math.round(matrix.f * precision) / precision\n  }\n}\n","import { inverse } from './inverse'\nimport { transform } from './transform'\nimport { smoothMatrix } from './smoothMatrix'\n\n/**\n * Returns a matrix that transforms a triangle t1 into another triangle t2, or throws an exception if it is impossible.\n * @param t1 {Point[]} Array of points containing the three points for the first triangle\n * @param t2 {Point[]} Array of points containing the three points for the second triangle\n * @returns {Matrix} Matrix which transforms t1 to t2\n * @throws Exception if the matrix becomes not invertible\n */\nexport function fromTriangles (t1, t2) {\n  // point p = first point of the triangle\n  const px1 = t1[0].x != null ? t1[0].x : t1[0][0]\n  const py1 = t1[0].y != null ? t1[0].y : t1[0][1]\n  const px2 = t2[0].x != null ? t2[0].x : t2[0][0]\n  const py2 = t2[0].y != null ? t2[0].y : t2[0][1]\n\n  // point q = second point of the triangle\n  const qx1 = t1[1].x != null ? t1[1].x : t1[1][0]\n  const qy1 = t1[1].y != null ? t1[1].y : t1[1][1]\n  const qx2 = t2[1].x != null ? t2[1].x : t2[1][0]\n  const qy2 = t2[1].y != null ? t2[1].y : t2[1][1]\n\n  // point r = third point of the triangle\n  const rx1 = t1[2].x != null ? t1[2].x : t1[2][0]\n  const ry1 = t1[2].y != null ? t1[2].y : t1[2][1]\n  const rx2 = t2[2].x != null ? t2[2].x : t2[2][0]\n  const ry2 = t2[2].y != null ? t2[2].y : t2[2][1]\n\n  const r1 = {\n    a: px1 - rx1,\n    b: py1 - ry1,\n    c: qx1 - rx1,\n    d: qy1 - ry1,\n    e: rx1,\n    f: ry1\n  }\n  const r2 = {\n    a: px2 - rx2,\n    b: py2 - ry2,\n    c: qx2 - rx2,\n    d: qy2 - ry2,\n    e: rx2,\n    f: ry2\n  }\n\n  const inverseR1 = inverse(r1)\n  const affineMatrix = transform([r2, inverseR1])\n\n  // round the matrix elements to smooth the finite inversion\n  return smoothMatrix(affineMatrix)\n}\n","import { fromObject } from './fromObject'\nimport { translate } from './translate'\nimport { scale } from './scale'\nimport { rotateDEG } from './rotate'\nimport { skewDEG } from './skew'\nimport { shear } from './shear'\n\n/**\n * Converts array of matrix descriptor to array of matrix\n * @param definitionOrArrayOfDefinition {Object[]} Array of object describing the matrix\n * @returns {Matrix[]} Array of matrix\n *\n * @example\n * > fromDefinition([\n *  { type: 'matrix', a:1, b:2, c:3, d:4, e:5, f:6 },\n *  { type: 'translate', tx: 10, ty: 20 },\n *  { type: 'scale', sx: 2, sy: 4 },\n *  { type: 'rotate', angle: 90, cx: 50, cy: 25 },\n *  { type: 'skewX', angle: 45 },\n *  { type: 'skewY',  angle: 45 },\n *  { type: 'shear', shx: 10, shy: 20}\n * ])\n *\n * [\n *  { a: 1, b: 2, c: 3, d: 4, e: 5, f: 6 },\n *  { a: 1, c: 0, e: 10, b: 0, d: 1, f: 20 },\n *  { a: 2, c: 0, e: 0, b: 0, d: 4, f: 0 },\n *  { a: 6.123, c: -1, e: 0, b: 1, d: 6.123, f: 0 },\n *  { a: 1, c: 0.99.., e: 0, b: 0, d: 1, f: 0 },\n *  { a: 1, c: 0, e: 0, b: 0.99, d: 1, f: 0 },\n *  { a: 1, c: 10, e: 0, b: 20, d: 1, f: 0 }\n * ]\n **/\nexport function fromDefinition (definitionOrArrayOfDefinition) {\n  return Array.isArray(definitionOrArrayOfDefinition)\n    ? definitionOrArrayOfDefinition.map(mapper)\n    : mapper(definitionOrArrayOfDefinition)\n\n  function mapper (descriptor) {\n    switch (descriptor.type) {\n      case 'matrix':\n        if ('a' in descriptor &&\n          'b' in descriptor &&\n          'c' in descriptor &&\n          'd' in descriptor &&\n          'e' in descriptor &&\n          'f' in descriptor\n        ) {\n          return fromObject(descriptor)\n        } else {\n          throw new Error('MISSING_MANDATORY_PARAM')\n        }\n\n      case 'translate':\n        if (!('tx' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n\n        if ('ty' in descriptor) return translate(descriptor.tx, descriptor.ty)\n\n        return translate(descriptor.tx)\n\n      case 'scale':\n        if (!('sx' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n\n        if ('sy' in descriptor) return scale(descriptor.sx, descriptor.sy)\n\n        return scale(descriptor.sx)\n\n      case 'rotate':\n        if (!('angle' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n\n        if ('cx' in descriptor && 'cy' in descriptor) {\n          return rotateDEG(descriptor.angle, descriptor.cx, descriptor.cy)\n        }\n        return rotateDEG(descriptor.angle)\n\n      case 'skewX':\n        if (!('angle' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n        return skewDEG(descriptor.angle, 0)\n\n      case 'skewY':\n        if (!('angle' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n        return skewDEG(0, descriptor.angle)\n\n      case 'shear':\n        if (!('shx' in descriptor && 'shy' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n        return shear(descriptor.shx, descriptor.shy)\n\n      default:\n        throw new Error('UNSUPPORTED_DESCRIPTOR')\n    }\n  }\n}\n","// Generated by Peggy 3.0.0.\n//\n// https://peggyjs.org/\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  var self = Error.call(this, message);\n  // istanbul ignore next Check is a necessary evil to support older environments\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n  }\n  self.expected = expected;\n  self.found = found;\n  self.location = location;\n  self.name = \"SyntaxError\";\n  return self;\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\nfunction peg$padEnd(str, targetLength, padString) {\n  padString = padString || \" \";\n  if (str.length > targetLength) { return str; }\n  targetLength -= str.length;\n  padString += padString.repeat(targetLength);\n  return str + padString.slice(0, targetLength);\n}\n\npeg$SyntaxError.prototype.format = function(sources) {\n  var str = \"Error: \" + this.message;\n  if (this.location) {\n    var src = null;\n    var k;\n    for (k = 0; k < sources.length; k++) {\n      if (sources[k].source === this.location.source) {\n        src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n        break;\n      }\n    }\n    var s = this.location.start;\n    var offset_s = (this.location.source && (typeof this.location.source.offset === \"function\"))\n      ? this.location.source.offset(s)\n      : s;\n    var loc = this.location.source + \":\" + offset_s.line + \":\" + offset_s.column;\n    if (src) {\n      var e = this.location.end;\n      var filler = peg$padEnd(\"\", offset_s.line.toString().length, ' ');\n      var line = src[s.line - 1];\n      var last = s.line === e.line ? e.column : line.length + 1;\n      var hatLen = (last - s.column) || 1;\n      str += \"\\n --> \" + loc + \"\\n\"\n          + filler + \" |\\n\"\n          + offset_s.line + \" | \" + line + \"\\n\"\n          + filler + \" | \" + peg$padEnd(\"\", s.column - 1, ' ')\n          + peg$padEnd(\"\", hatLen, \"^\");\n    } else {\n      str += \"\\n at \" + loc;\n    }\n  }\n  return str;\n};\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts.join(\"\") + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n  var peg$source = options.grammarSource;\n\n  var peg$startRuleFunctions = { transformList: peg$parsetransformList };\n  var peg$startRuleFunction = peg$parsetransformList;\n\n  var peg$c0 = \"matrix\";\n  var peg$c1 = \"(\";\n  var peg$c2 = \")\";\n  var peg$c3 = \"translate\";\n  var peg$c4 = \"scale\";\n  var peg$c5 = \"rotate\";\n  var peg$c6 = \"skewX\";\n  var peg$c7 = \"skewY\";\n  var peg$c8 = \",\";\n  var peg$c9 = \".\";\n\n  var peg$r0 = /^[eE]/;\n  var peg$r1 = /^[+\\-]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[ \\t\\r\\n]/;\n\n  var peg$e0 = peg$literalExpectation(\"matrix\", false);\n  var peg$e1 = peg$literalExpectation(\"(\", false);\n  var peg$e2 = peg$literalExpectation(\")\", false);\n  var peg$e3 = peg$literalExpectation(\"translate\", false);\n  var peg$e4 = peg$literalExpectation(\"scale\", false);\n  var peg$e5 = peg$literalExpectation(\"rotate\", false);\n  var peg$e6 = peg$literalExpectation(\"skewX\", false);\n  var peg$e7 = peg$literalExpectation(\"skewY\", false);\n  var peg$e8 = peg$literalExpectation(\",\", false);\n  var peg$e9 = peg$otherExpectation(\"fractionalConstant\");\n  var peg$e10 = peg$literalExpectation(\".\", false);\n  var peg$e11 = peg$classExpectation([\"e\", \"E\"], false, false);\n  var peg$e12 = peg$classExpectation([\"+\", \"-\"], false, false);\n  var peg$e13 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e14 = peg$classExpectation([\" \", \"\\t\", \"\\r\", \"\\n\"], false, false);\n\n  var peg$f0 = function(ts) { return ts; };\n  var peg$f1 = function(t, ts) { return t.concat(ts) };\n  var peg$f2 = function(a, b, c, d, e, f) {\n      return [{type: 'matrix', a: a, b: b, c: c, d: d, e: e, f: f}];\n    };\n  var peg$f3 = function(tx, ty) {\n      var t = {type: 'translate', tx: tx};\n      if (ty) t.ty = ty;\n      return [t];\n    };\n  var peg$f4 = function(sx, sy) {\n      var s = {type:'scale', sx: sx};\n      if (sy) s.sy = sy;\n      return [s];\n    };\n  var peg$f5 = function(angle, c) {\n      var r = {type:'rotate', angle: angle};\n      if (c) {\n        r.cx = c[0];\n        r.cy = c[1];\n      }\n      return [r];\n    };\n  var peg$f6 = function(angle) {\n      return [{type: 'skewX', angle: angle}];\n    };\n  var peg$f7 = function(angle) {\n      return [{type: 'skewY', angle: angle}];\n    };\n  var peg$f8 = function(f) { return parseFloat(f.join(\"\")); };\n  var peg$f9 = function(i) { return parseInt(i.join(\"\")); };\n  var peg$f10 = function(n) { return n; };\n  var peg$f11 = function(n1, n2) { return [n1, n2]; };\n  var peg$f12 = function(ds) { return ds.join(\"\"); };\n  var peg$f13 = function(f, e) { return [f, e || null].join(\"\")};\n  var peg$f14 = function(d, e) { return [d, e].join(\"\")};\n  var peg$f15 = function(d1, d2) { return [d1 ? d1.join(\"\") : null, \".\", d2.join(\"\")].join(\"\"); };\n  var peg$f16 = function(d) { return d.join(\"\"); };\n  var peg$f17 = function(s, d) { return ['e', s, d.join(\"\")].join(\"\") };\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$maxFailPos = 0;\n  var peg$maxFailExpected = [];\n  var peg$silentFails = 0;\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return {\n      source: peg$source,\n      start: peg$savedPos,\n      end: peg$currPos\n    };\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos, offset) {\n    var startPosDetails = peg$computePosDetails(startPos);\n    var endPosDetails = peg$computePosDetails(endPos);\n\n    var res = {\n      source: peg$source,\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n    if (offset && peg$source && (typeof peg$source.offset === \"function\")) {\n      res.start = peg$source.offset(res.start);\n      res.end = peg$source.offset(res.end);\n    }\n    return res;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsetransformList() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsewsp();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parsewsp();\n    }\n    s2 = peg$parsetransforms();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = [];\n    s4 = peg$parsewsp();\n    while (s4 !== peg$FAILED) {\n      s3.push(s4);\n      s4 = peg$parsewsp();\n    }\n    peg$savedPos = s0;\n    s0 = peg$f0(s2);\n\n    return s0;\n  }\n\n  function peg$parsetransforms() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsetransform();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsecommaWsp();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsecommaWsp();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsetransforms();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f1(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsetransform();\n    }\n\n    return s0;\n  }\n\n  function peg$parsetransform() {\n    var s0;\n\n    s0 = peg$parsematrix();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsetranslate();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsescale();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parserotate();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseskewX();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseskewY();\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsematrix() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c0) {\n      s1 = peg$c0;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e0); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWsp();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsenumber();\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parsecommaWsp();\n              if (s8 !== peg$FAILED) {\n                s9 = peg$parsenumber();\n                if (s9 !== peg$FAILED) {\n                  s10 = peg$parsecommaWsp();\n                  if (s10 !== peg$FAILED) {\n                    s11 = peg$parsenumber();\n                    if (s11 !== peg$FAILED) {\n                      s12 = peg$parsecommaWsp();\n                      if (s12 !== peg$FAILED) {\n                        s13 = peg$parsenumber();\n                        if (s13 !== peg$FAILED) {\n                          s14 = peg$parsecommaWsp();\n                          if (s14 !== peg$FAILED) {\n                            s15 = peg$parsenumber();\n                            if (s15 !== peg$FAILED) {\n                              s16 = [];\n                              s17 = peg$parsewsp();\n                              while (s17 !== peg$FAILED) {\n                                s16.push(s17);\n                                s17 = peg$parsewsp();\n                              }\n                              if (input.charCodeAt(peg$currPos) === 41) {\n                                s17 = peg$c2;\n                                peg$currPos++;\n                              } else {\n                                s17 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$e2); }\n                              }\n                              if (s17 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s0 = peg$f2(s5, s7, s9, s11, s13, s15);\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetranslate() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 9) === peg$c3) {\n      s1 = peg$c3;\n      peg$currPos += 9;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e3); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWspNumber();\n          if (s6 === peg$FAILED) {\n            s6 = null;\n          }\n          s7 = [];\n          s8 = peg$parsewsp();\n          while (s8 !== peg$FAILED) {\n            s7.push(s8);\n            s8 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s8 = peg$c2;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\n          }\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f3(s5, s6);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsescale() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c4) {\n      s1 = peg$c4;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e4); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWspNumber();\n          if (s6 === peg$FAILED) {\n            s6 = null;\n          }\n          s7 = [];\n          s8 = peg$parsewsp();\n          while (s8 !== peg$FAILED) {\n            s7.push(s8);\n            s8 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s8 = peg$c2;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\n          }\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f4(s5, s6);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parserotate() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c5) {\n      s1 = peg$c5;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e5); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWspTwoNumbers();\n          if (s6 === peg$FAILED) {\n            s6 = null;\n          }\n          s7 = [];\n          s8 = peg$parsewsp();\n          while (s8 !== peg$FAILED) {\n            s7.push(s8);\n            s8 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s8 = peg$c2;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\n          }\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f5(s5, s6);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseskewX() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c6) {\n      s1 = peg$c6;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e6); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$parsewsp();\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c2;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\n          }\n          if (s7 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f6(s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseskewY() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c7) {\n      s1 = peg$c7;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e7); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$parsewsp();\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c2;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\n          }\n          if (s7 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f7(s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumber() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsesign();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = peg$parsefloatingPointConstant();\n    if (s3 !== peg$FAILED) {\n      s2 = [s2, s3];\n      s1 = s2;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f8(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parsesign();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseintegerConstant();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f9(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecommaWspNumber() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parsecommaWsp();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f10(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecommaWspTwoNumbers() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsecommaWsp();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsecommaWsp();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsenumber();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f11(s2, s4);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecommaWsp() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsewsp();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsewsp();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomma();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = [];\n      s4 = peg$parsewsp();\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$parsewsp();\n      }\n      s1 = [s1, s2, s3];\n      s0 = s1;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsecomma();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsewsp();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsewsp();\n        }\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomma() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s0 = peg$c8;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e8); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseintegerConstant() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsedigitSequence();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f12(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsefloatingPointConstant() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parsefractionalConstant();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseexponent();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f13(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsedigitSequence();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseexponent();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f14(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefractionalConstant() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsedigitSequence();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s2 = peg$c9;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e10); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsedigitSequence();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f15(s1, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsedigitSequence();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s2 = peg$c9;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e10); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f16(s1);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e9); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseexponent() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e11); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesign();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parsedigitSequence();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f17(s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesign() {\n    var s0;\n\n    if (peg$r1.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e12); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedigitSequence() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parsedigit();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parsedigit();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedigit() {\n    var s0;\n\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e13); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsewsp() {\n    var s0;\n\n    if (peg$r3.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e14); }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nexport {\n  peg$SyntaxError as SyntaxError,\n\n  peg$parse as parse\n};\n","import { parse } from './fromTransformAttribute.autogenerated'\n\n/**\n * Parser for SVG Trasform Attribute http://www.w3.org/TR/SVG/coords.html#TransformAttribute <br/>\n * Warning: This should be considered BETA until it is released a stable version of pegjs.\n * @param transformString {string} Transform string as defined by w3 Consortium\n * @returns {MatrixDescriptor[]} Array of MatrixDescriptor\n *\n * @example\n * > fromTransformAttribute('translate(-10,-10) scale(2,2) translate(10,10)')\n * [\n *  { type: 'translate', tx: -10, ty: -10},\n *  { type: 'scale', sx: 2, sy: 2 },\n *  { type: 'translate', tx: 10, ty: 10}\n * ]\n *\n * > compose(fromDefinition(fromTransformAttribute('translate(-10, -10) scale(10, 10)')))\n * { a: 10, c: 0, e: -10, b: 0, d: 10, f: -10 }\n */\nexport function fromTransformAttribute (transformString) {\n  return parse(transformString)\n}\n","import { scale } from './scale'\nimport { compose } from './transform'\n/**\n * Decompose a matrix into translation, scaling and rotation components, optionally\n * take horizontal and vertical flip in to consideration.\n * Note this function decomposes a matrix in rotation -> scaling -> translation order. I.e. for\n * certain translation T {tx, ty}, rotation R and scaling S { sx, sy }, it's only true for:\n *  decomposeTSR(compose(T, S, R)) === { translate: T, rotation: R, scale: S }\n * composing in a different order may yield a different decomposition result.\n * @param matrix {Matrix} Affine Matrix\n * @param  flipX {boolean} Whether the matrix contains vertical flip, i.e. mirrors on x-axis\n * @param  flipY {boolean} Whether the matrix contains horizontal flip, i.e. mirrors on y-axis\n * @returns {Transform} A transform object consisted by its translation, scaling\n * and rotation components.\n */\nexport function decomposeTSR (matrix, flipX = false, flipY = false) {\n  // Remove flip from the matrix first - flip could be incorrectly interpreted as\n  // rotations (e.g. flipX + flipY = rotate by 180 degrees).\n  // Note flipX is a vertical flip, and flipY is a horizontal flip.\n  if (flipX) {\n    if (flipY) {\n      matrix = compose(matrix, scale(-1, -1))\n    } else {\n      matrix = compose(matrix, scale(1, -1))\n    }\n  } else if (flipY) {\n    matrix = compose(matrix, scale(-1, 1))\n  }\n\n  const a = matrix.a; const b = matrix.b\n  const c = matrix.c; const d = matrix.d\n  let scaleX, scaleY, rotation\n\n  if (a !== 0 || c !== 0) {\n    const hypotAc = Math.hypot(a, c)\n    scaleX = hypotAc\n    scaleY = (a * d - b * c) / hypotAc\n    const acos = Math.acos(a / hypotAc)\n    rotation = c > 0 ? -acos : acos\n  } else if (b !== 0 || d !== 0) {\n    const hypotBd = Math.hypot(b, d)\n    scaleX = (a * d - b * c) / hypotBd\n    scaleY = hypotBd\n    const acos = Math.acos(b / hypotBd)\n    rotation = Math.PI / 2 + (d > 0 ? -acos : acos)\n  } else {\n    scaleX = 0\n    scaleY = 0\n    rotation = 0\n  }\n\n  // put the flip factors back\n  if (flipY) {\n    scaleX = -scaleX\n  }\n\n  if (flipX) {\n    scaleY = -scaleY\n  }\n\n  return {\n    translate: { tx: matrix.e, ty: matrix.f },\n    scale: { sx: scaleX, sy: scaleY },\n    rotation: { angle: rotation }\n  }\n}\n","\n/**\n * Tranformation matrix that mirrors on x-axis\n * @returns {Matrix} Affine Matrix\n */\nexport function flipX () {\n  return {\n    a: 1,\n    c: 0,\n    e: 0,\n    b: 0,\n    d: -1,\n    f: 0\n  }\n}\n\n/**\n * Tranformation matrix that mirrors on y-axis\n * @returns {Matrix} Affine Matrix\n */\nexport function flipY () {\n  return {\n    a: -1,\n    c: 0,\n    e: 0,\n    b: 0,\n    d: 1,\n    f: 0\n  }\n}\n\n/**\n * Tranformation matrix that mirrors on origin\n * @returns {Matrix} Affine Matrix\n */\nexport function flipOrigin () {\n  return {\n    a: -1,\n    c: 0,\n    e: 0,\n    b: 0,\n    d: -1,\n    f: 0\n  }\n}\n","import { translate } from './translate'\nimport { applyToPoint } from './applyToPoint'\nimport { rotate } from './rotate'\nimport { scale } from './scale'\nimport { compose } from './transform'\n\n// https://manivannan-ai.medium.com/find-the-angle-between-three-points-from-2d-using-python-348c513e2cd\n\n/**\n * Calculate a transformation matrix from a point that starts from A to A'\n * This approach can be associated to a pointer that moves on a device\n * @param {Point} startingPoint - Starting point (A)\n * @param {Point} endingPoint - Ending point (A')\n */\nexport function fromOneMovingPoint (startingPoint, endingPoint) {\n  const tx = endingPoint.x - startingPoint.x\n  const ty = endingPoint.y - startingPoint.y\n\n  return translate(tx, ty)\n}\n\n/**\n * Calculate a transformation matrix about two points that move from positions A and B to A' and B'\n * This approach can be associated to a two finger gesture on a touch device\n * @param {Point} startingPoint1 - Starting Point (A)\n * @param {Point} startingPoint2 - Starting Point (B)\n * @param {Point} endingPoint1 - Ending point (A')\n * @param {Point} endingPoint2 - Ending Point (B')\n */\nexport function fromTwoMovingPoints (startingPoint1, startingPoint2, endingPoint1, endingPoint2) {\n  // finds translation\n  const translationMatrix = fromOneMovingPoint(startingPoint1, endingPoint1)\n\n  const pointA = applyToPoint(translationMatrix, startingPoint2) // I have to translate this point\n  const center = endingPoint1\n  const pointB = endingPoint2\n\n  // finds rotation matrix\n  const angle = Math.atan2(pointB.y - center.y, pointB.x - center.x) - Math.atan2(pointA.y - center.y, pointA.x - center.x)\n  const rotationMatrix = rotate(angle, center.x, center.y)\n\n  // finds scale matrix\n  const d1 = Math.sqrt(Math.pow(pointA.x - center.x, 2) + Math.pow(pointA.y - center.y, 2))\n  const d2 = Math.sqrt(Math.pow(pointB.x - center.x, 2) + Math.pow(pointB.y - center.y, 2))\n  const scalingLevel = d2 / d1\n  const scalingMatrix = scale(scalingLevel, scalingLevel, center.x, center.y)\n\n  return compose([\n    translationMatrix,\n    scalingMatrix,\n    rotationMatrix\n  ])\n}\n","export * from './applyToPoint'\nexport * from './fromObject'\nexport * from './fromString'\nexport * from './identity'\nexport * from './inverse'\nexport * from './isAffineMatrix'\nexport * from './rotate'\nexport * from './scale'\nexport * from './shear'\nexport * from './skew'\nexport * from './toString'\nexport * from './transform'\nexport * from './translate'\nexport * from './fromTriangles'\nexport * from './smoothMatrix'\nexport * from './fromDefinition'\nexport * from './fromTransformAttribute'\nexport * from './decompose'\nexport * from './flip'\nexport * from './fromMovingPoints'\n"],"names":["applyToPoint","matrix","point","Array","isArray","a","c","e","b","d","f","x","y","applyToPoints","points","map","fromObject","object","parseFloat","matrixRegex","fromString","string","parsed","match","length","Error","concat","identity","inverse","denom","isUndefined","val","isNumeric","n","Number","isNaN","isFinite","isObject","obj","_typeof","matchesShape","keys","every","key","isAffineMatrix","translate","tx","ty","arguments","undefined","transform","_len","matrices","_key","multiply","m1","m2","_matrices","_matrices2","_toArray","rest","slice","m","apply","_toConsumableArray","compose","cos","Math","sin","PI","rotate","angle","cx","cy","cosAngle","sinAngle","rotationMatrix","rotateDEG","scale","sx","sy","scaleMatrix","shear","shx","shy","tan","skew","ax","ay","skewDEG","toCSS","toString","toSVG","smoothMatrix","precision","round","fromTriangles","t1","t2","px1","py1","px2","py2","qx1","qy1","qx2","qy2","rx1","ry1","rx2","ry2","r1","r2","inverseR1","affineMatrix","fromDefinition","definitionOrArrayOfDefinition","mapper","descriptor","type","peg$subclass","child","parent","C","constructor","prototype","peg$SyntaxError","message","expected","found","location","self","call","Object","setPrototypeOf","name","peg$padEnd","str","targetLength","padString","repeat","format","sources","src","k","source","text","split","s","start","offset_s","offset","loc","line","column","end","filler","last","hatLen","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","_class","escapedParts","parts","part","classEscape","inverted","join","any","other","description","hex","ch","charCodeAt","toUpperCase","replace","describeExpectation","describeExpected","descriptions","i","j","sort","describeFound","peg$parse","input","options","peg$FAILED","peg$source","grammarSource","peg$startRuleFunctions","transformList","peg$parsetransformList","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$r0","peg$r1","peg$r2","peg$r3","peg$e0","peg$literalExpectation","peg$e1","peg$e2","peg$e3","peg$e4","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$otherExpectation","peg$e10","peg$e11","peg$classExpectation","peg$e12","peg$e13","peg$e14","peg$f0","ts","peg$f1","t","peg$f2","peg$f3","peg$f4","peg$f5","r","peg$f6","peg$f7","peg$f8","peg$f9","parseInt","peg$f10","peg$f11","n1","n2","peg$f12","ds","peg$f13","peg$f14","peg$f15","d1","d2","peg$f16","peg$f17","peg$currPos","peg$savedPos","peg$posDetailsCache","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","startRule","substring","range","peg$computeLocation","peg$buildStructuredError","error","peg$buildSimpleError","ignoreCase","peg$anyExpectation","peg$endExpectation","peg$computePosDetails","pos","details","p","startPos","endPos","startPosDetails","endPosDetails","res","peg$fail","push","s0","s1","s2","s3","s4","peg$parsewsp","peg$parsetransforms","peg$parsetransform","peg$parsecommaWsp","peg$parsematrix","peg$parsetranslate","peg$parsescale","peg$parserotate","peg$parseskewX","peg$parseskewY","s5","s6","s7","s8","s9","s10","s11","s12","s13","s14","s15","s16","s17","substr","peg$parsenumber","peg$parsecommaWspNumber","peg$parsecommaWspTwoNumbers","peg$parsesign","peg$parsefloatingPointConstant","peg$parseintegerConstant","peg$parsecomma","peg$parsedigitSequence","peg$parsefractionalConstant","peg$parseexponent","test","charAt","peg$parsedigit","SyntaxError","parse","fromTransformAttribute","transformString","decomposeTSR","flipX","flipY","scaleX","scaleY","rotation","hypotAc","hypot","acos","hypotBd","flipOrigin","fromOneMovingPoint","startingPoint","endingPoint","fromTwoMovingPoints","startingPoint1","startingPoint2","endingPoint1","endingPoint2","translationMatrix","pointA","center","pointB","atan2","sqrt","pow","scalingLevel","scalingMatrix"],"sourceRoot":""}